version: '3.7'

networks:
  ms-networks:
    driver: bridge

services:
  # product-ms:
  #   container_name: product-ms
  #   build:
  #     context: .
  #     dockerfile: ./Dockerfile
  #   mem_limit: 700m
  #   ports:
  #     - "9999:9999"
  #   environment: 
  #     spring.profiles.active: dev
  #     spring.datasource.url: jdbc:postgresql://db:5432/product-ms
  #     spring.datasource.username: postgres
  #     spring.datasource.password: '123456'
  #   networks:
  #     - ms-networks
  #   depends_on:
  #     db:
  #       condition: service_healthy
  #   healthcheck:
  #     test: wget http://localhost:9999/actuator/health || exit 1
  #     interval: 5s
  #     timeout: 30s
  #     retries: 25

  mongodb:
    container_name: mongodb
    image: mongo
    restart: always
    environment: 
      MONGO_INITDB_ROOT_USERNAME: rootuser
      MONGO_INITDB_ROOT_PASSWORD: rootpass
    ports: 
    - "17017:27017"    
    volumes:
    - /data:/data 
    networks: 
    - ms-networks
    # healthcheck:
    #   test: echo 'db.runCommand({serverStatus:1}).ok' | mongo admin -u $MONGO_INITDB_ROOT_USERNAME -p $MONGO_INITDB_ROOT_PASSWORD --quiet | grep 1
    #   interval: 10s
    #   timeout: 10s
    #   retries: 3
    #   start_period: 20s

  # db:
  #   container_name: db
  #   image: postgres
  #   environment: 
  #     POSTGRES_USER: postgres
  #     POSTGRES_PASSWORD: '123456'
  #     POSTGRES_DB: product-ms
  #   ports: 
  #   - "15432:5432"     
  #   networks: 
  #   - ms-networks
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U postgres"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5